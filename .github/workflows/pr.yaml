name: PR workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - master

jobs:
  quality-check:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest-django pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 backend/api/ --count --select=E9,F63,F7,F82 --show-source --statistics --exclude *_test.py
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 backend/api/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude *_test.py
      - name: Unit tests with pytest
        run: |
          cd backend/
          DJANGO_SECRET_KEY=fakekeyfortesting pytest --cache-clear  --ignore api/tests/ --cov-config=.coveragerc --cov=api/ --cov-report term-missing --cov-fail-under 100

functional-check:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest-django
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Functional tests with pytest
        run: |
          DJANGO_SECRET_KEY=fakekeyfortesting pytest --cache-clear api/tests/
